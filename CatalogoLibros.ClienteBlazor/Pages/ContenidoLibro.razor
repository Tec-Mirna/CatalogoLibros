@page "/contenidolibro/{id:int}"

@using Models
@using Services
@inject ILibroService LibroService

@*<MudText Class="text-center" Typo="Typo.h5">Detalles del Libro</MudText>*@

@if (libro == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <MudCard>

        <MudCardHeader Class="teal ">
            <CardHeaderContent>
                <MudText  Typo="Typo.h6">@libro.Nombre</MudText>
            </CardHeaderContent>
        </MudCardHeader>

        <MudCardContent Class="center">
           @* <MudText class="center" src="@libro.Contenido" alt="@libro.Contenido" Elevation="25"  width="25%" height="350" />*@
            <MudText Typo="Typo.body2"><b></b>@libro.Contenido</MudText>
            @*< embed src="@libro.Contenido" style="width=100%; height=2100px;" />*@
        </MudCardContent>

        @*<MudCardContent>
            <MudText Typo="Typo.body2"><b>Fecha de Publicación:</b>@libro.FechaPublicacion</MudText>
            <br>
            <MudText Typo="Typo.body2"><b>Páginas:</b>@libro.NumPaginas</MudText>
            <br>
            <MudText class="Descri" Typo="Typo.body2"><b>Descripción: </b>@libro.Descripcion</MudText>
         </MudCardContent>*@

         <MudCardActions>
             <MudButton Variant="Variant.Filled" Href="libros" Color="Color.Secondary">Atrás</MudButton>
         </MudCardActions>

    </MudCard>
}

@code {
     [Parameter]
    public int id { get; set; }

    Libro libro = new Libro();

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        libro = await LibroService.GetById(id);
    }
}
