@page "/libros"
@using Models
@using Services
@inject ILibroService LibroService

<head>
     <link rel="stylesheet" href="css/app.css"/>  
</head>

@*<MudText Typo="Typo.h4">Libros</MudText>*@

@if (libros == null)
{
    <p>Cargando...</p>
}
else
{
    <form>
    <MudTextField class="entrada" @bind-Value="searchTerm" Variant="Variant.Filled"  style="width: 92%; height: 50px; border:1px solid #0000FF;  background-color:#ffffff; color:black;" Label="Escribir nombre de un libro">     
    </MudTextField>
   <MudButton id="margin" class="buscar" OnClick="GetByCategoria" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Search" Style="background-color:blue; color=:white;   display:inline-block;" />
    @*<MudButton class="buscar" OnClick="GetByCategoria" >Buscar</MudButton>*@
   
    </form>
    <br />
   <MudGrid class="book">
        @foreach (var item in libros)
        {
            
            <MudItem xs="12" sm="10" md="6" lg="4">
                <MudCard Outlined="true" style="border:solid  1px #000;">
                    <MudCardHeader Class="MyApp"> @*style="background-color:black"*@
                    <CardHeaderContent>
                            <MudText class="namebook" Typo="Typo.h6">@item.Nombre</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardActions>
                         <img src="@item.Imagen" alt="@item.Nombre" Elevation="50"  style="width:100%;height:350px;"/>
                        
                    </MudCardActions>

                    <MudCardActions>
                    @*<MudButton Class="btn" Link="@($"/detalles/{item.Id}")" Variant="Variant.Outlined" Color="Color.Dark">Detalles</MudButton>&nbsp; &nbsp; &nbsp;*@
                    <MudButton id="read" Class="btns" Link="@($"/contenidolibro/{item.Id}")" Variant="Variant.Outlined">Leer</MudButton>
                       </MudCardActions>
                </MudCard>

            </MudItem>
            
        }
    </MudGrid>
}

@code {
    IEnumerable<Libro> libros = new List<Libro>();
    private string searchTerm = "";
    private async Task GetByCategoria()
    {
        libros = await LibroService.GetByCategoria(searchTerm);
    }

    protected override async Task OnInitializedAsync()
    {
        libros = await LibroService.GetByCategoria(searchTerm);
    }
}
<style>
    .mud-text{
        color:white;
    }
    .titulo{
        color:white;
    }
    #margin{
        margin-right:450px;
    }
</style>
 

<style>
    .buscar{
        background-color:blue;
        color:white;
        width:150px;
        height:50px;
        border-radius:7px;
    }
    .buscar:hover{
        background-color:blue;
        color:white;
        border:3rem;
        border-color:blue;
    }
    
</style>

<style>
    mud-text-field{
        background-color:#f2f2f2;
        color:#333;
        display:inline-block;
    }
    mud-button{
       /* background-color:blue;
        color:white;
        border:none;
        padding:15px 32px;
        display:inline-block;
        cursor:pointer;
        text-align:center;
        text-decoration:none;
        font-size:16px;
        margin:4px 2px;*/
    }
   /*#tarjeta{
       padding:10px;
       margin-top:10px;
   }*/
   form{
       display:flex;
   }
   .MudTextField, .MudButton {
  vertical-align: top;
}
#read{
    width:100%;
    height:45px;
    background-color: blue;
}

  .namebook{
      color:black;
      font-weight:600;
  }
  
</style>


